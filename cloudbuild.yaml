steps:
# This step runs the unit tests on the app
- name: 'python:3.11-alpine'
  id: Test
  entrypoint: /bin/sh
  args:
  - -c
  - 'pip install -r requirements.txt && pytest --maxfail=1'

# This step builds the container image.

- name: gcr.io/cloud-builders/docker
  args:
    - build
    - '--no-cache'
    - '-t'
    - >-
      $_AR_HOSTNAME/$PROJECT_ID/cloud-run-source-deploy/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA
    - .
    - '-f'
    - Dockerfile
  id: Build
  
# This step pushes the image to Artifact Registry

- name: gcr.io/cloud-builders/docker
  args:
    - push
    - >-
      $_AR_HOSTNAME/$PROJECT_ID/cloud-run-source-deploy/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA
  id: Push

# Deploy image to Cloud Run Google Cloud 
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
  args:
    - run
    - deploy
    - $_SERVICE_NAME
    - '--platform=managed'
    - >-
      --image=$_AR_HOSTNAME/$PROJECT_ID/cloud-run-source-deploy/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA
    - >-
      --labels=managed-by=gcp-cloud-build-deploy-cloud-run,commit-sha=$COMMIT_SHA,gcb-build-id=$BUILD_ID
    - '--region=$_DEPLOY_REGION'
    - '--quiet'
  id: Deploy
  entrypoint: gcloud

images:
- >-
  $_AR_HOSTNAME/$PROJECT_ID/cloud-run-source-deploy/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA
substitutions:
  _PLATFORM: managed
  _SERVICE_NAME: fastapi-app
  _DEPLOY_REGION: asia-southeast1
  _AR_HOSTNAME: asia-southeast1-docker.pkg.dev